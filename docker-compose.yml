version: "3.9"
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5433"
    env_file:
      - .env
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data
      - ./postgres/dump/:/docker-entrypoint-initdb.d/

  adminer:
    image: adminer
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: ${POSTGRES_HOST}

  first_service:
    build: ./first
    container_name: nestjs-app-for-first-service
    volumes:
      - ./first/:/app

    depends_on:
      - postgres
      - kafka
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    env_file:
      - .env

  second_service:
    build: ./second
    container_name: nestjs-app-for-second-service
    volumes:
      - ./second/:/app
    environment:
      KAFKA_SERVER: kafka:9092
    depends_on:
      - postgres
      - kafka
    ports:
      - "5000:5000"
    stdin_open: true
    tty: true
    env_file:
      - .env

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
